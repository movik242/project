---
# tasks file for backupsrv
- name: Update Repository cache # загружаем репозитории локально
  ansible.builtin.apt:
    update_cache: true

- name: Install # установка postgres и pgadmin, зависимости
  ansible.builtin.apt:
    name: '{{ item }}'
    state: present
  with_items:
    - 'borgbackup'
    - 'net-tools'
    - 'wget'
    - 'bash-completion'
    - 'zabbix-agent'
    - 'openssh-server'
    - 'lvm2'
    
- name: copy fail postgresql.conf # копируем postgresql.conf
  copy:
    src: files/zabbix-agentd.conf
    dest: /etc/zabbix/zabbix-agentd.conf    
    
- name: Add user zabbix create a password for user zabbix
  user:
    name: borg  
    password: admin
    
- name: Add the user 'johnd' with a specific uid and a primary group of 'admin'
  ansible.builtin.user:
    name: borg
    uid: 1001
    group: borg    
    
- name: Add the user 'james' with a bash shell
  ansible.builtin.user:
    name: borg
    shell: /bin/bash
    groups: root
    append: yes

- name: Change file ownership, group and permissions
  ansible.builtin.file:
    path: '/home/borg/.ssh/*'
    state: directory
    owner: borg
    group: borg
    mode: '700'

- name: copy fail postgresql.conf # копируем postgresql.conf
  copy:
    src: files/authorized_keys
    dest: /home/borg/.ssh/authorized_keys   

- name: Change file ownership, group and permissions
  ansible.builtin.file:
    path: '/home/borg/.ssh/authorized_keys'
    owner: borg
    group: borg
    mode: '600'


#- name: Add Borgmatic configuration
#  ansible.builtin.template:
#    src: authorized_keys.j2
#    dest: /home/borg/.ssh/authorized_keys
#    mode: "0600"
#    owner: borg
#    group: borg

#- name: Create a 2048-bit SSH key for user borg in ~ borg/.ssh/id_rsa
#  ansible.builtin.user:
#    name: borg
#    generate_ssh_key: yes
#    ssh_key_bits: 2048
#    ssh_key_file: .ssh/id_rsa
    
- name: Install # установка postgres и pgadmin, зависимости
  ansible.builtin.apt:
    name: '{{ item }}'
    state: present
  with_items:
    - 'lvm2'    
    
- name: create partition
  parted:
    device: /dev/sdb
    number: 1
    flags: [ lvm ]
    state: present
    part_end: 5GB  
    
- name: Create a volume group on top of /dev/sda1 with physical extent size = 32MB
  community.general.lvg:
    vg: vg_backup
    pvs: /dev/sdb1
    pesize: 4G      
    
- name: task for creating logical volume
  lvol:
    vg: vg_backup
    lv:  lv_backup
    size: 4G
    force: yes 
    
- name: Create directory data1 if does not exist
  file:
    path: /opt/backup
    state: directory
    mode: '0755'

- name: format the xfs filesystem
  filesystem:
    fstype: xfs
    dev: /dev/vg_backup/lv_backup

- name: mount the lv on /data1
  mount:
    path: /opt/backup
    src: /dev/vg_backup/lv_backup
    fstype: xfs
    state: mounted      
        
        
 
    
 
 
 
 
 
 
 
 
 
    
    
